import React from 'react';
import { useSelector } from 'react-redux';
import '../scss/app.scss';
import Categories from '../components/Categories';
import Sort from '../components/Sort';
import PizzaBlock from '../components/PizzaBlock';
import Skeleton from '../components/Skeleton';
import Pagination from '../components/Pagination';
import { setCategoryId, setCurrentPage } from '../redux/slices/filterSlice';
import { fetchPizzas } from '../redux/slices/pizzaSlice';
import { RootState, useAppDispatch } from '../redux/store';

const Home: React.FC = () => {
  const dispatch = useAppDispatch();
  const { categoryId, sort, currentPage, searchValue } = useSelector(
    (state: RootState) => state.filter,
  );
  const { items, status } = useSelector((state: RootState) => state.pizza); // –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º items –∏–∑ —Å—Ç–æ—Ä–∞ –Ω–∞—à–µ–≥–æ —Å–ª–∞–π—Å–∞, —á—Ç–æ–±—ã –ø—Ä—è–º–æ –∑–¥–µ—Å—å –ø–∏—Ö–∞—Ç—å –≤ –Ω–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –±—ç–∫—ç–Ω–¥
  const sortType = sort.sortProperty;
  const [orderOfSorting, setOrderOfSorting] = React.useState(true);
  const onChangeCategory = React.useCallback((id: number) => {
    dispatch(setCategoryId(id));
  }, []);
  const onChangePage = (page: number) => {
    dispatch(setCurrentPage(page));
  };
  let getPizzas = async () => {
    // —Å–¥–µ–ª–∞–ª–∏ —Ñ—É–Ω–∫—Ü–∏—é –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π
    const order = orderOfSorting === true ? 'asc' : 'desc'; // —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ –≤–≤–µ—Ä—Ö-–≤–Ω–∏–∑ = –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é-—É–±—ã–≤–∞–Ω–∏—é
    const categoryParams = categoryId > 0 ? `category=${categoryId}` : '';
    const search = searchValue ? `&search=${searchValue}` : '';
    dispatch(
      fetchPizzas({
        search,
        sortType,
        order,
        currentPage: String(currentPage),
        categoryParams,
      }),
    ); // –î–∏—Å–ø–∞—Ç—á–∏–º —Ñ—É–Ω–∫—Ü–∏—é –Ω–µ —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥ –≤ —Ä–µ–¥—å—é—Å–µ—Ä–µ, –∞ —á–µ—Ä–µ–∑ –æ—Ç–¥–µ–ª—å–Ω—É—é –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    window.scrollTo(0, 0);
  };

  const pizzas = items.map((obj: any) => <PizzaBlock key={obj.id} {...obj} />); // —Ä–∏—Å—É–µ–º –ø–∏—Ü—Ü—ã
  const skeleton = [...new Array(6)].map((_, index) => <Skeleton key={index} />); // —Ä–∏—Å—É–µ–º —Å–∫–µ–ª–µ—Ç–æ–Ω—ã, –ø–æ–∫–∞ –Ω–µ –ø—Ä–∏—à–µ–ª –æ—Ç–≤–µ—Ç
  React.useEffect(() => {
    getPizzas();
  }, [categoryId, sortType, orderOfSorting, searchValue, currentPage]); // –ø—Ä–æ–ø–∏—Å–∞–ª–∏, –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ –∫–∞–∫–∏—Ö –ø–µ—Ä–µ–º–µ–Ω—ã—Ö –º—ã –Ω–∞–±–ª—é–¥–∞–µ–º

  return (
    <div className="container">
      <div className="content__top">
        <Categories value={categoryId} onClickCategory={onChangeCategory} />
        <Sort value={sort} orderOfSorting={orderOfSorting} setOrderOfSorting={setOrderOfSorting} />
      </div>
      <h2 className="content__title">–í—Å–µ –ø–∏—Ü—Ü—ã</h2>
      {status === 'error' ? (
        <div className="content__error-info">
          <h2>
            –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ <span>üòï</span>
          </h2>
          <p>–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–∏—Ü—Ü—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ </p>
        </div>
      ) : (
        <div className="content__items">{status === 'loading' ? skeleton : pizzas}</div>
      )}
      <Pagination currentPage={currentPage} onChangePage={onChangePage} />
    </div>
  );
};

export default Home;
